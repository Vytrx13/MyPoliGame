# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  frontend:
    container_name: "mypoligame-frontend"
    build:
      context: .
    environment:
      NODE_ENV: development
    network_mode: "host" 
    develop:
      watch:
        - action: sync
          path: ./
          target: /usr/src/app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    depends_on:
      backend:
        condition: service_started

  backend:
    container_name: "mypoligame-backend"
    build:
      context: ./backend
    environment:
      NODE_ENV: production
    network_mode: "host" 
    develop:
      watch:
        - action: rebuild
          path: ./backend
          target: /usr/src/app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    depends_on:
      db:
        condition: service_healthy
  db:
    container_name: "mypoligame-db"
    network_mode: "host" 
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    image: postgres
    restart: always
    user: postgres
    environment:
      - POSTGRES_DB=poligame
      - POSTGRES_PASSWORD=postgres
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 1s
      timeout: 1s
      retries: 30